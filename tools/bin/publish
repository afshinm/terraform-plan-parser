#!/usr/bin/env node

const VERSION_TYPE = process.argv[2] || 'patch';

const {
  exec,
  chalk,
  writeJsonFile,
  readJsonFile,
  ROOT_DIR,
  DIST_DIR,
  ROOT_PACKAGE_JSON_FILE,
  DIST_PACKAGE_JSON_FILE
} = require('../build-util');

async function run () {
  await exec(`npm version ${VERSION_TYPE} --no-git-tag-version`, { cwd: DIST_DIR });
  await exec('npm publish --access public', { cwd: DIST_DIR });

  const rootPackageObj = await readJsonFile(ROOT_PACKAGE_JSON_FILE);
  const distPackageObj = await readJsonFile(DIST_PACKAGE_JSON_FILE);

  rootPackageObj.version = distPackageObj.version;

  const tagName = `v${rootPackageObj.version}`;

  await writeJsonFile(ROOT_PACKAGE_JSON_FILE, rootPackageObj);
  await exec('git add .', { cwd: ROOT_DIR });
  await exec(`git commit -m "Published ${rootPackageObj.version}"`, { cwd: ROOT_DIR });
  await exec('git push', { cwd: ROOT_DIR });
  await exec(`git tag ${tagName}`, { cwd: ROOT_DIR });
  await exec(`git push origin ${tagName}`, { cwd: ROOT_DIR });

  return rootPackageObj;
}

run().then((publishedPackage) => {
  console.log(chalk.bold.green(`Published ${publishedPackage.name}@${publishedPackage.version}`));
}).catch((err) => {
  console.error(chalk.bold.red(`Error publishing. ${err.stack || err.toString()}`));
});
